@top Document { misc (DoctypeDecl misc)? (Element misc)+ }

entity { Text | EntityReference | CharacterReference | Cdata | Element | Comment | ProcessingInst }

Element {
  OpenTag entity* CloseTag |
  SelfClosingTag
}

OpenTag[closedBy=CloseTag] {
  StartTag space* TagName space* (Attribute space*)* EndTag
}

SelfClosingTag {
  StartTag space* TagName space* (Attribute space*)* SelfCloseEndTag
}

CloseTag[openedBy=OpenTag] {
  StartCloseTag space* (MatchingTagName | nonMatchingTagName) space* EndTag
}

Attribute {
  AttributeName space* Is space* AttributeValue
}

misc {
  (Comment | space | ProcessingInst)*
}

AttributeValue { "\"" (attributeContent | EntityReference | CharacterReference)* "\"" }

@external tokens closeTagName from "./tokens.js" {
  MatchingTagName[name=TagName],
  nonMatchingTagName[name=MismatchedTagName]
}

@tokens {
  StartTag[closedBy="SelfCloseEndTag EndTag"] { "<" }

  StartCloseTag[closedBy=EndTag] { "</" }

  EndTag[openedBy="StartTag StartCloseTag"] { ">" }

  SelfCloseEndTag[openedBy=StartTag] { "/>" }

  nameStart {
    ":" | std.asciiLetter | "_" |
    $[\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D] |
    $[\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u{10000}-\u{EFFFF}]
  }

  nameChar {
    nameStart | "-" | "." | std.digit | $[\u00B7\u0300-\u036F\u203F-\u2040]
  }

  identifier { nameStart nameChar* }

  TagName { identifier }

  AttributeName { identifier }

  attributeContent { !["&]+ }

  Is { "=" }

  EntityReference { "&" ![#; ]+ ";" }

  CharacterReference { "&#" ![; ]+ ";" }

  Text { ![<&]+ }

  Comment { "<!--" commentContent }

  commentContent { ![\-] commentContent | "-" commentDash1 }
  commentDash1 { ![\-] commentContent | "-" commentDash2 }
  commentDash2 { ![\->] commentContent | "-" commentDash2 | ">" }

  ProcessingInst { "<?" piContent }

  piContent { ![?] piContent | "?" piQuestion }
  piQuestion { ![>] piContent | ">" }

  DoctypeDecl { "<!" ("doctype" | "DOCTYPE") ![>]* ">" }

  Cdata { "<![" ("cdata" | "CDATA") "[" cdataContent }

  cdataContent { ![\]] cdataContent | "]" cdataBracket1 }
  cdataBracket1 { ![\]] cdataContent | "]" cdataBracket2 }
  cdataBracket2 { ![\]>] cdataContent | "]" cdataBracket2 | ">" }

  @precedence { Comment, Cdata, ProcessingInst, DoctypeDecl, StartTag }

  space { (" " | "\t" | "\r" | "\n")+ }
}

@detectDelim
